/*
    Представьте что вы работаете в большой компании,
        где используется модульная архитектура.
    Ваш коллега написал модуль с какой-то логикой (вы не знаете)
        и передает в вашу программу какие-то данные.
    Вы же пишете функцию которая считывает две переменных типа string,
        а возвращает число типа int64 которое нужно получить сложением этих строк.
    Но не было бы так все просто, ведь ваш коллега не пишет на Go,
        и он зол из-за того, что гоферам платят больше.
    Поэтому он решил подшутить над вами и подсунул вам свинью.
    Он придумал вставлять мусор в строки перед тем как вызывать вашу функцию.
    Поэтому предварительно вам нужно убрать из них мусор и конвертировать в числа.
    Под мусором имеются ввиду лишние символы и спец знаки.
    Разрешается использовать только определенные пакеты:
        fmt, strconv, unicode, strings,  bytes.
    Они уже импортированы, вам ничего импортировать не нужно!
    Считывать и выводить ничего не нужно!
    Ваша функция должна называться adding() !
    Считайте что функция и пакет main уже объявлены!
    
    Sample Input:
        %^80 hhhhh20&&&&nd
    Sample Output:
        100
*/

// Пакет и функция main уже объявлены!
// Импортировать ничего не нужно!
// Удачи!
func giveMeString(strInput string) int64 {
    var intReturn int64
    runeSlice := []rune(strInput)
    runeSlice2 := []rune{}

    for i := 0; i < len(runeSlice); i++ {
        if (unicode.IsDigit(runeSlice[i])){
            runeSlice2 = append(runeSlice2, runeSlice[i])
        }
    }

	intReturn, _ = strconv.ParseInt(string(runeSlice2), 10, 64)
    return intReturn
}

func adding (strA, strB string) int64 {
    return giveMeString(strA) + giveMeString(strB)
}
